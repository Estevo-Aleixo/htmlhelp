diff -u -ur phpdoc.orig/xsl/htmlhelp.xsl phpdoc/xsl/htmlhelp.xsl
--- tmp/phpdoc/xsl/htmlhelp.xsl		2002-08-11 19:02:57.000000000 +0100
+++ work/phpdoc/xsl/htmlhelp.xsl	2003-11-03 18:34:03.000000000 +0000
@@ -38,14 +38,11 @@
   <title>
     <xsl:apply-templates select="$node" mode="object.title.markup.textonly"/>
   </title>
-  <script language="JavaScript1.2" src="_script.js"></script>
 
 </xsl:template>
 
 <!-- We need quite different body attributes than the defaults -->
 <xsl:template name="body.attributes">
-  <xsl:attribute name="onload">displayPage();</xsl:attribute>
-  <xsl:attribute name="oncontextmenu">if(prefs_context_override){return false;}</xsl:attribute>
 </xsl:template>
 
 <!-- Our HTML head part is *extra* slim -->
@@ -63,66 +60,6 @@
 <xsl:template name="footer.navigation">
   <xsl:param name="prev" select="/foo"/>
   <xsl:param name="next" select="/foo"/>
-  
-  <a name="_user_notes"></a>
-  <div id="pageNotes"></div>
-  <script language="JavaScript1.2">
-   function displayNotes() { _displayNotes(); }
-   loadNotes();
-  </script>
-  
-  <div id="pageNav">
-  <table width="100%" border="0" cellspacing="10" cellpadding="0" class="navigation">
-    <tr align="left" valign="middle"> 
-      <td>
-        <xsl:if test="count($prev)>0">
-          <span id="navPrev">
-          <a accesskey="p">
-            <xsl:attribute name="href">
-              <xsl:call-template name="href.target">
-                <xsl:with-param name="object" select="$prev"/>
-              </xsl:call-template>
-            </xsl:attribute>
-            <xsl:text>&lt;&lt; </xsl:text>
-            <xsl:apply-templates select="$prev" mode="phpdoc.object.title"/>
-          </a>
-          </span>
-        </xsl:if>
-      </td>
-      <td align="center">
-        <span id="navPath">
-        <xsl:apply-templates select="." mode="path.to.this.page">
-          <xsl:with-param name="actpage" select="true()"/>
-        </xsl:apply-templates>
-        </span>
-      </td>
-      <td align="right">
-        <xsl:if test="count($next)>0">
-          <span id="navNext">
-          <a accesskey="n">
-            <xsl:attribute name="href">
-              <xsl:call-template name="href.target">
-                <xsl:with-param name="object" select="$next"/>
-              </xsl:call-template>
-            </xsl:attribute>
-            <xsl:apply-templates select="$next" mode="phpdoc.object.title"/>
-            <xsl:text> &gt;&gt;</xsl:text>
-          </a>
-          </span>
-        </xsl:if>
-      </td>
-    </tr>
-    <tr align="center" valign="middle"> 
-      <td colspan="3">
-        <span id="navOnline">
-          <span id="navThisOnline"><a href="javascript:thisPageOnline();">This page online</a></span>
-          <xsl:text disable-output-escaping="yes"> &amp;nbsp; </xsl:text>
-          <span id="navReportBug"><a href="javascript:bugOnPage();">Report a bug</a></span>
-        </span>
-      </td>
-    </tr>
-  </table>
-  </div>
 </xsl:template>
 
 <!-- Try to figure out the path to this page from the main page -->
diff -u -ur phpdoc.orig/xsl/htmlhelp-db.xsl phpdoc/xsl/htmlhelp.xsl
--- tmp/phpdoc/xsl/htmlhelp-db.xsl	2003-04-19 18:52:17.000000000 +0100
+++ work/phpdoc/xsl/htmlhelp.xsl	2003-11-03 18:39:01.000000000 +0000
@@ -1,573 +1,385 @@
-<?xml version="1.0"?>
-<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-                xmlns:doc="http://nwalsh.com/xsl/documentation/1.0"
-                version="1.0"
-                exclude-result-prefixes="doc">
-
-<!-- ********************************************************************
-     Id: htmlhelp.xsl,v 1.9 2001/12/06 17:52:55 kosek Exp
-     ******************************************************************** 
-
-     This file is used by htmlhelp.xsl if you want to generate source
-     files for HTML Help.  It is based on the XSL DocBook Stylesheet
-     distribution (especially on JavaHelp code) from Norman Walsh.
-
-     ******************************************************************** -->
-
-<!-- Customized for phpdoc needs :
-
-    - used DOCBOOKXSL_HTML to locate HTML chunk.xsl file
-    - all map and alias parts deleted, we do not need them
-    - deleted autoindex from [OPTIONS]
-    - added Index file to [OPTIONS] => new $htmlhelp.hhk param!
-    - the index file will always be _index.html
-    - made title a variable => two places to use it
-    - added phpdoc window definition
-    - added [MERGE FILES] section for manual notes file
-    - added more special files to [FILES]
-    - removed enumerate-images parts, we do not have any
-      images to enumerate for compatibility reasons with
-      other formats
-    - made <book> the first item in the TOC, but not the absolute
-      root. this is not fully correct, but makes the CHM more
-      useable.
-    - removed blocks for index terms, maps and aliases
-    - removed href.target.with.base.dir, as we have all the
-      files in the same dir
-    - generate all hh[pkc] files into $base.dir
-    - added a HHK generator part (slightly modified version of
-      HHC generator)
--->
-     
-<xsl:import href="./docbook/html/chunkfast.xsl"/>
-
-<!-- ==================================================================== -->
-<!-- Customizations of standard HTML stylesheet parameters -->
-
-<xsl:param name="suppress.navigation" select="1"/>
-
-<!-- ==================================================================== -->
-
-<xsl:template match="/">
-  <xsl:choose>
-    <xsl:when test="$rootid != ''">
-      <xsl:choose>
-        <xsl:when test="count(key('id',$rootid)) = 0">
-          <xsl:message terminate="yes">
-            <xsl:text>ID '</xsl:text>
-            <xsl:value-of select="$rootid"/>
-            <xsl:text>' not found in document.</xsl:text>
-          </xsl:message>
-        </xsl:when>
-        <xsl:otherwise>
-          <xsl:message>Formatting from <xsl:value-of select="$rootid"/></xsl:message>
-          <xsl:apply-templates select="key('id',$rootid)" mode="process.root"/>
-        </xsl:otherwise>
-      </xsl:choose>
-    </xsl:when>
-    <xsl:otherwise>
-      <xsl:apply-templates select="/" mode="process.root"/>
-    </xsl:otherwise>
-  </xsl:choose>
-
-  <xsl:call-template name="hhp"/>
-  <xsl:call-template name="hhc"/>
-  <xsl:call-template name="hhk"/>
-</xsl:template>
-
-<!-- ==================================================================== -->
-
-<xsl:template name="hhp">
-  <xsl:call-template name="write.text.chunk">
-    <xsl:with-param name="filename" select="concat($base.dir,$htmlhelp.hhp)"/>
-    <xsl:with-param name="method" select="'text'"/>
-    <xsl:with-param name="content">
-      <xsl:call-template name="hhp-main"/>
-    </xsl:with-param>
-    <xsl:with-param name="encoding" select="$htmlhelp.encoding"/>
-  </xsl:call-template>
-</xsl:template>
-
-<!-- ==================================================================== -->
-<xsl:template name="hhp-main">
-<xsl:text>[OPTIONS]
-</xsl:text>
-<xsl:text>Compatibility=1.1 or later
-Compiled file=</xsl:text><xsl:value-of select="$htmlhelp.chm"/><xsl:text>
-Contents file=</xsl:text><xsl:value-of select="$htmlhelp.hhc"/><xsl:text>
-Index file=</xsl:text><xsl:value-of select="$htmlhelp.hhk"/><xsl:text>
-Default topic=_index.html
-Default Window=phpdoc
-Display compile progress=No
-Full-text search=Yes
-Language=</xsl:text>
-<xsl:if test="//@lang">
-  <xsl:variable name="lang" select="//@lang[1]"/>
-  <xsl:value-of select="document('htmlhelp-codes.xml')//gentext[@lang=string($lang)]"/>
-</xsl:if>
-<xsl:if test="not(//@lang)">
-  <xsl:text>0x0409 English (United States)</xsl:text>
-</xsl:if>
-<xsl:text>
-Title=</xsl:text>
-<xsl:variable name="htmlhelp.title">
-  <xsl:choose>
-    <xsl:when test="$rootid != ''">
-      <xsl:value-of select="normalize-space(key('id',$rootid)//title[1])"/>
-    </xsl:when>
-    <xsl:otherwise>
-      <xsl:value-of select="normalize-space(//title[1])"/>
-    </xsl:otherwise>
-  </xsl:choose>
-</xsl:variable>
-<xsl:value-of select="$htmlhelp.title"/>
-<xsl:text>
-
-[WINDOWS]
-phpdoc="</xsl:text>
-<xsl:value-of select="$htmlhelp.title"/>
-<xsl:text>","</xsl:text>
-<xsl:value-of select="$htmlhelp.hhc"/>
-<xsl:text>","</xsl:text>
-<xsl:value-of select="$htmlhelp.hhk"/>
-<xsl:text>","_index.html","_index.html",,,,,0x23520,,0x386e,,,,,,,,0
-
-[MERGE FILES]
-php_manual_notes.chm
-
-[FILES]
-_atw.gif
-_body.gif
-_code.gif
-_function.html
-_google.gif
-_index.html
-_masterheader.jpg
-_note.gif
-_pixel.gif
-_script.js
-_skin_hi.js
-_skin_lo.js
-_style_hi.css
-_style_lo.css
-_subheader.gif
-_warning.gif
-</xsl:text>
-
-<xsl:choose>
-  <xsl:when test="$rootid != ''">
-    <xsl:apply-templates select="key('id',$rootid)" mode="enumerate-files"/>
-  </xsl:when>
-  <xsl:otherwise>
-    <xsl:apply-templates mode="enumerate-files"/>
-  </xsl:otherwise>
-</xsl:choose>
-
-</xsl:template>
-
-<!-- ==================================================================== -->
-
-<xsl:template match="set|book|part|preface|chapter|appendix
-                     |article
-                     |reference|refentry
-                     |sect1|sect2|sect3|sect4|sect5
-                     |section
-                     |book/glossary|article/glossary
-                     |book/bibliography|article/bibliography
-                     |book/glossary|article/glossary
-                     |colophon"
-              mode="enumerate-files">
-  <xsl:variable name="ischunk"><xsl:call-template name="chunk"/></xsl:variable>
-  <xsl:if test="$ischunk='1'">
-    <xsl:call-template name="make-relative-filename">
-      <xsl:with-param name="base.dir" select="''"/>
-      <xsl:with-param name="base.name">
-        <xsl:apply-templates mode="chunk-filename" select="."/>
-      </xsl:with-param>
-    </xsl:call-template>
-    <xsl:text>&#10;</xsl:text>
-  </xsl:if>
-  <xsl:apply-templates select="*" mode="enumerate-files"/>
-</xsl:template>
+<?xml version="1.0" encoding="iso-8859-1"?>
+<!-- 
 
-<xsl:template match="text()" mode="enumerate-files">
-</xsl:template>
+  HTML Help specific stylesheet
 
-<!-- ==================================================================== -->
+  $Id: htmlhelp.xsl.in,v 1.35 2002/08/11 18:02:57 goba Exp $
 
-<!-- Following templates are not nice. It is because MS help compiler is unable
-     to process correct HTML files. We must generate following weird
-     stuff instead. -->
-
-<xsl:template name="hhc">
-  <xsl:call-template name="write.text.chunk">
-    <xsl:with-param name="filename" select="concat($base.dir,$htmlhelp.hhc)"/>
-    <xsl:with-param name="method" select="'text'"/>
-    <xsl:with-param name="content">
-      <xsl:call-template name="hhc-main"/>
-    </xsl:with-param>
-    <xsl:with-param name="encoding" select="$htmlhelp.encoding"/>
-  </xsl:call-template>
-</xsl:template>
-
-<xsl:template name="hhc-main">
-  <xsl:text>&lt;HTML&gt;
-&lt;HEAD&gt;
-&lt;/HEAD&gt;
-&lt;BODY&gt;
-&lt;OBJECT type="text/site properties"&gt;
-        &lt;param name="Window Styles" value="0x800227"&gt;
-&lt;/OBJECT&gt;
-&lt;UL&gt;
-</xsl:text>
+-->
+<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+                xmlns:stbl="http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table"
+                xmlns:xtbl="com.nwalsh.xalan.Table"
+                exclude-result-prefixes="stbl xtbl"
+                version="1.0">
 
-  <xsl:choose>
-    <xsl:when test="$rootid != ''">
-      <xsl:apply-templates select="key('id',$rootid)" mode="hhc"/>
-    </xsl:when>
-    <xsl:otherwise>
-      <xsl:apply-templates select="." mode="hhc"/>
-    </xsl:otherwise>
-  </xsl:choose>
+<xsl:import href="htmlhelp-db.xsl"/>
+<xsl:import href="html-common.xsl"/>
 
-  <xsl:text>&lt;/UL&gt;
-&lt;/BODY&gt;
-&lt;/HTML&gt;</xsl:text>
-</xsl:template>
+<xsl:param name="base.dir" select="'htmlhelp/html/'"/>
+<xsl:param name="use.id.as.filename" select="1"/>
+<xsl:param name="htmlhelp.encoding" select="'ISO-8859-1'"/>
+<xsl:param name="default.encoding" select="'ISO-8859-1'"/>
+<xsl:param name="htmlhelp.chm" select="'php_manual_en.chm'"/>
+<xsl:param name="htmlhelp.hhp" select="'php_manual_en.hhp'"/>
+<xsl:param name="htmlhelp.hhc" select="'php_manual_en.hhc'"/>
+<xsl:param name="htmlhelp.hhk" select="'php_manual_en.hhk'"/>
+<xsl:param name="saxon.character.representation" select="'native'"/>
 
-<xsl:template match="book" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+<xsl:param name="ulink.target" select="'_blank'"/>
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="_index.html"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:apply-templates select="part|reference|preface|chapter|bibliography|appendix|article|colophon"
-                       mode="hhc"/>
-</xsl:template>
-
-<xsl:template match="part|reference|preface|chapter|bibliography|appendix|article"
-              mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+<!-- ======================================================================
+     Custom XSL code for PHP CHM Manual 
+ -->
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="reference|preface|chapter|appendix|refentry|section|sect1|bibliodiv">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates
-        select="reference|preface|chapter|appendix|refentry|section|sect1|bibliodiv"
-        mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
-  </xsl:if>
-</xsl:template>
+<!-- Custom head content to make HTML files *small* -->
+<xsl:template name="head.content">
+  <xsl:param name="node" select="."/>
 
-<xsl:template match="section" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+  <title>
+    <xsl:apply-templates select="$node" mode="object.title.markup.textonly"/>
+  </title>
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="section[count(ancestor::section) &lt; $htmlhelp.hhc.section.depth]">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates select="section" mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
-  </xsl:if>
 </xsl:template>
 
-<xsl:template match="sect1" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
-
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="sect2[$htmlhelp.hhc.section.depth > 1]">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates select="sect2"
-                           mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
-  </xsl:if>
+<!-- We need quite different body attributes than the defaults -->
+<xsl:template name="body.attributes">
 </xsl:template>
 
-<xsl:template match="sect2" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
-
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="sect3[$htmlhelp.hhc.section.depth > 2]">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates select="sect3"
-                           mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
-  </xsl:if>
+<!-- Our HTML head part is *extra* slim -->
+<xsl:template name="html.head">
+  <head>
+    <xsl:call-template name="head.content"/>
+  </head>
 </xsl:template>
 
-<xsl:template match="sect3" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+<!-- We need no header navigation (we'll need footer, so this is
+     why I have not used supress.navigation=1) --> 
+<xsl:template name="header.navigation" />
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="sect4[$htmlhelp.hhc.section.depth > 3]">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates select="sect4"
-                           mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
-  </xsl:if>
+<!-- Footer part with special table for our special needs ;) -->
+<xsl:template name="footer.navigation">
+  <xsl:param name="prev" select="/foo"/>
+  <xsl:param name="next" select="/foo"/>
 </xsl:template>
 
-<xsl:template match="sect4" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+<!-- Try to figure out the path to this page from the main page -->
+<xsl:template match="*" mode="path.to.this.page">
+  <xsl:param name="actpage" select="false()"/>
+  <xsl:variable name="up" select="parent::*"/>
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:if test="sect5[$htmlhelp.hhc.section.depth > 4]">
-    <xsl:text>&lt;UL&gt;</xsl:text>
-      <xsl:apply-templates select="sect5"
-                           mode="hhc"/>
-    <xsl:text>&lt;/UL&gt;</xsl:text>
+  <!-- Call this recursively for the parent -->
+  <xsl:if test="count($up)>0">
+    <xsl:apply-templates select="parent::*" mode="path.to.this.page">
+      <xsl:with-param name="actpage" select="false()"/>
+    </xsl:apply-templates>
   </xsl:if>
-</xsl:template>
-
-<xsl:template match="sect5|refentry|colophon|bibliodiv" mode="hhc">
-  <xsl:variable name="title">
-    <xsl:if test="$htmlhelp.autolabel=1">
-      <xsl:variable name="label.markup">
-        <xsl:apply-templates select="." mode="label.markup"/>
-      </xsl:variable>
-      <xsl:if test="normalize-space($label.markup)">
-        <xsl:value-of select="concat($label.markup,$autotoc.label.separator)"/>
-      </xsl:if>
-    </xsl:if>
-    <xsl:apply-templates select="." mode="title.markup"/>
+  
+  <!-- Choose our own title, different from the default if this
+       is the main page -->
+  <xsl:variable name="object.title">
+    <xsl:choose>
+      <xsl:when test="count($up)>0">
+        <xsl:apply-templates select="." mode="phpdoc.object.title"/>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:value-of select="'Main'"/>
+      </xsl:otherwise>
+    </xsl:choose>
   </xsl:variable>
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-</xsl:template>
-
-<!-- ==================================================================== -->
-
-<!-- Similar code to HHC, but quite modified for HHK generation -->
-
-<!-- Following templates are not nice. It is because MS help compiler is unable
-     to process correct HTML files. We must generate following weird
-     stuff instead. -->
-
-<xsl:template name="hhk">
-  <xsl:call-template name="write.text.chunk">
-    <xsl:with-param name="filename" select="concat($base.dir,$htmlhelp.hhk)"/>
-    <xsl:with-param name="method" select="'text'"/>
-    <xsl:with-param name="content">
-      <xsl:call-template name="hhk-main"/>
-    </xsl:with-param>
-    <xsl:with-param name="encoding" select="$htmlhelp.encoding"/>
-  </xsl:call-template>
-</xsl:template>
-
-<xsl:template name="hhk-main">
-  <xsl:text>&lt;HTML&gt;
-&lt;HEAD&gt;
-&lt;/HEAD&gt;
-&lt;BODY&gt;
-&lt;OBJECT type="text/site properties"&gt;
-        &lt;param name="Window Styles" value="0x800227"&gt;
-&lt;/OBJECT&gt;
-&lt;UL&gt;
-</xsl:text>
-
+  <!-- Do not link if actual page, put " : " between links -->
   <xsl:choose>
-    <xsl:when test="$rootid != ''">
-      <xsl:apply-templates select="key('id',$rootid)" mode="hhk"/>
+    <xsl:when test="$actpage = true()">
+      <xsl:value-of select="$object.title"/>
     </xsl:when>
     <xsl:otherwise>
-      <xsl:apply-templates select="." mode="hhk"/>
+      <a>
+        <xsl:attribute name="href">
+          <xsl:call-template name="href.target">
+            <xsl:with-param name="object" select="."/>
+          </xsl:call-template>
+        </xsl:attribute>
+        <xsl:value-of select="$object.title"/>
+      </a>
+      <xsl:text> : </xsl:text>
     </xsl:otherwise>
   </xsl:choose>
+</xsl:template>
+
+<!-- This is the same as in DocBook XSL, except that we
+     print out a &raquo; HTML entity before the link and add
+     a CSS class to the link -->
+<xsl:template match="ulink" name="ulink">
+  <a class="ulink">
+    <xsl:if test="@id">
+      <xsl:attribute name="name">
+        <xsl:value-of select="@id"/>
+      </xsl:attribute>
+    </xsl:if>
+    <xsl:attribute name="href"><xsl:value-of select="@url"/></xsl:attribute>
+    <xsl:if test="$ulink.target != ''">
+      <xsl:attribute name="target">
+        <xsl:value-of select="$ulink.target"/>
+      </xsl:attribute>
+    </xsl:if>
+    <xsl:text disable-output-escaping="yes">&amp;raquo; </xsl:text>
+    <xsl:choose>
+      <xsl:when test="count(child::node())=0">
+        <xsl:value-of select="@url"/>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:apply-templates/>
+      </xsl:otherwise>
+    </xsl:choose>
+  </a>
+</xsl:template>
+
+<!-- Special reference page formatting for HH -->
+
+<!--  Function page sample:
+<h2 class="subheader">Format a local time/date. (PHP 3, PHP 4 &gt;= 4.0.0)<br>
+Usage: string date (string format, int [timestamp])<br></h2>
+-->
+<xsl:template match="refnamediv">
+  <div class="{name(.)}">
+    <xsl:call-template name="anchor"/>
+    <h2 class="subheader">
+      <span id="funcPurpose"><xsl:value-of select="./refpurpose"/></span>
+      (<span id="funcAvail"><xsl:value-of select="$version/function[@name=string(current()/refname)]/@from"/></span>)
+      <br/>
+      <span id="funcUsage"><xsl:apply-templates select="../refsect1/methodsynopsis" mode="htmlhelp.methodsyn"/></span>
+    </h2>
+  </div>
+</xsl:template>
+
+<!-- Drop out constant "Description" -->
+<xsl:template match="refsect1/title"/>
+<xsl:template match="refsect1/refpurpose"/>
+
+<!-- Avoid printout of methosyns, where we do not want them,
+     but print out them in header -->
+<xsl:template match="methodsynopsis"/>
+<xsl:template match="methodsynopsis" mode="htmlhelp.methodsyn">
+  <xsl:apply-templates select="." mode="php"/><br/>
+</xsl:template>
+
+<!-- do not enclose <methodname> in a <tt> -->
+<xsl:template match="methodname">
+  <xsl:call-template name="inline.charseq"/>
+</xsl:template>
+
+<!-- Use simple bold text for admonitions -->
+<xsl:template name="nongraphical.admonition">
+  <div class="{name(.)}">
+    <xsl:if test="$admon.style">
+      <xsl:attribute name="style">
+        <xsl:value-of select="$admon.style"/>
+      </xsl:attribute>
+    </xsl:if>
 
-  <xsl:text>&lt;/UL&gt;
-&lt;/BODY&gt;
-&lt;/HTML&gt;</xsl:text>
+    <b>
+      <xsl:call-template name="anchor"/>
+      <xsl:apply-templates select="." mode="object.title.markup"/>
+      <xsl:text>: </xsl:text>
+    </b>
+
+    <xsl:apply-templates/>
+  </div>
+</xsl:template>
+
+<!-- Different table formatting for default simplelist -->
+<xsl:template match="simplelist">
+  <!-- with no type specified, the default is 'vert' -->
+  <xsl:call-template name="anchor"/>
+  <table border="0" cellspacing="1" cellpadding="2" class="datatable">
+    <xsl:call-template name="simplelist.vert">
+      <xsl:with-param name="cols">
+        <xsl:choose>
+          <xsl:when test="@columns">
+            <xsl:value-of select="@columns"/>
+          </xsl:when>
+          <xsl:otherwise>1</xsl:otherwise>
+        </xsl:choose>
+      </xsl:with-param>
+    </xsl:call-template>
+  </table>
 </xsl:template>
 
-<xsl:template match="book" mode="hhk">
-  <xsl:variable name="title">
-    <xsl:apply-templates select="." mode="title.markup"/>
-  </xsl:variable>
+<!-- This is a copy from tables.xsl, except that we have different
+     attributes for table than the default style sheets, provided
+     here in the second line literally, and as a default 0 border -->
+<xsl:template match="tgroup">
+  <table cellspacing="1" cellpadding="2" class="datatable">
+    <xsl:choose>
+      <!-- If there's a <?dbhtml table-summary="foo"?> PI, use it for
+           the HTML table summary attribute -->
+      <xsl:when test="processing-instruction('dbhtml')">
+        <xsl:variable name="summary">
+          <xsl:call-template name="dbhtml-attribute">
+            <xsl:with-param name="pis"
+                            select="processing-instruction('dbhtml')[1]"/>
+            <xsl:with-param name="attribute" select="'table-summary'"/>
+          </xsl:call-template>
+        </xsl:variable>
+        <xsl:if test="$summary != ''">
+          <xsl:attribute name="summary">
+            <xsl:value-of select="$summary"/>
+          </xsl:attribute>
+        </xsl:if>
+      </xsl:when>
+      <!-- Otherwise, if there's a title, use that -->
+      <xsl:when test="../title">
+        <xsl:attribute name="summary">
+          <xsl:value-of select="string(../title)"/>
+        </xsl:attribute>
+      </xsl:when>
+      <!-- Otherwise, forget the whole idea -->
+      <xsl:otherwise><!-- nevermind --></xsl:otherwise>
+    </xsl:choose>
+
+    <xsl:if test="../@pgwide=1">
+      <xsl:attribute name="width">100%</xsl:attribute>
+    </xsl:if>
 
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="_index.html"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-
-  <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-        <xsl:value-of select="normalize-space($title)"/>
-    <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-        <xsl:call-template name="href.target"/>
-    <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  <xsl:apply-templates select="part|reference|preface|chapter|bibliography|appendix|article|colophon"
-                       mode="hhk"/>
-</xsl:template>
-
-<xsl:template match="part|preface|chapter|appendix
-                     |article
-                     |reference|refentry
-                     |sect1|sect2|sect3|sect4|sect5
-                     |section
-                     |book/glossary|article/glossary
-                     |book/bibliography|article/bibliography
-                     |book/glossary|article/glossary
-                     |colophon"
-              mode="hhk">
-  <xsl:variable name="ischunk"><xsl:call-template name="chunk"/></xsl:variable>
-  <xsl:if test="$ischunk='1'">
-    <xsl:variable name="title">
-      <xsl:apply-templates select="." mode="title.markup"/>
+    <xsl:choose>
+      <xsl:when test="../@frame='none'">
+        <xsl:attribute name="border">0</xsl:attribute>
+      </xsl:when>
+      <xsl:when test="$table.borders.with.css != 0">
+        <xsl:attribute name="border">0</xsl:attribute>
+        <xsl:choose>
+          <xsl:when test="../@frame='topbot' or ../@frame='top'">
+            <xsl:attribute name="style">
+              <xsl:call-template name="border">
+                <xsl:with-param name="side" select="'top'"/>
+              </xsl:call-template>
+            </xsl:attribute>
+          </xsl:when>
+          <xsl:when test="../@frame='sides'">
+            <xsl:attribute name="style">
+              <xsl:call-template name="border">
+                <xsl:with-param name="side" select="'left'"/>
+              </xsl:call-template>
+              <xsl:call-template name="border">
+                <xsl:with-param name="side" select="'right'"/>
+              </xsl:call-template>
+            </xsl:attribute>
+          </xsl:when>
+        </xsl:choose>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:attribute name="border">0</xsl:attribute>
+      </xsl:otherwise>
+    </xsl:choose>
+
+    <xsl:variable name="colgroup">
+      <colgroup>
+        <xsl:call-template name="generate.colgroup">
+          <xsl:with-param name="cols" select="@cols"/>
+        </xsl:call-template>
+      </colgroup>
     </xsl:variable>
-    <xsl:variable name="filename">
-      <xsl:call-template name="make-relative-filename">
-        <xsl:with-param name="base.dir" select="''"/>
-        <xsl:with-param name="base.name">
-          <xsl:apply-templates mode="chunk-filename" select="."/>
-        </xsl:with-param>
+
+    <xsl:variable name="explicit.table.width">
+      <xsl:call-template name="dbhtml-attribute">
+        <xsl:with-param name="pis"
+                        select="../processing-instruction('dbhtml')[1]"/>
+        <xsl:with-param name="attribute" select="'table-width'"/>
       </xsl:call-template>
     </xsl:variable>
-    <xsl:text>&lt;LI&gt; &lt;OBJECT type="text/sitemap"&gt;
-    &lt;param name="Name" value="</xsl:text>
-          <xsl:value-of select="normalize-space($title)"/>
-      <xsl:text>"&gt;
-    &lt;param name="Local" value="</xsl:text>
-          <xsl:value-of select="$filename"/>
-      <xsl:text>"&gt;
-  &lt;/OBJECT&gt;</xsl:text>
-  </xsl:if>
-  <xsl:apply-templates select="*" mode="hhk"/>
+
+    <xsl:variable name="table.width">
+      <xsl:choose>
+        <xsl:when test="$explicit.table.width != ''">
+          <xsl:value-of select="$explicit.table.width"/>
+        </xsl:when>
+        <xsl:when test="$default.table.width = ''">
+          <xsl:text>100%</xsl:text>
+        </xsl:when>
+        <xsl:otherwise>
+          <xsl:value-of select="$default.table.width"/>
+        </xsl:otherwise>
+      </xsl:choose>
+    </xsl:variable>
+
+    <xsl:if test="$default.table.width != ''
+                  or $explicit.table.width != ''">
+      <xsl:attribute name="width">
+        <xsl:choose>
+          <xsl:when test="contains($table.width, '%')">
+            <xsl:value-of select="$table.width"/>
+          </xsl:when>
+          <xsl:when test="$use.extensions != 0
+                          and $tablecolumns.extension != 0">
+            <xsl:choose>
+              <xsl:when test="function-available('stbl:convertLength')">
+                <xsl:value-of select="stbl:convertLength($table.width)"/>
+              </xsl:when>
+              <xsl:when test="function-available('xtbl:convertLength')">
+                <xsl:value-of select="xtbl:convertLength($table.width)"/>
+              </xsl:when>
+              <xsl:otherwise>
+                <xsl:message terminate="yes">
+                  <xsl:text>No convertLength function available.</xsl:text>
+                </xsl:message>
+              </xsl:otherwise>
+            </xsl:choose>
+          </xsl:when>
+          <xsl:otherwise>
+            <xsl:value-of select="$table.width"/>
+          </xsl:otherwise>
+        </xsl:choose>
+      </xsl:attribute>
+    </xsl:if>
+
+    <xsl:choose>
+      <xsl:when test="$use.extensions != 0
+                      and $tablecolumns.extension != 0">
+        <xsl:choose>
+          <xsl:when test="function-available('stbl:adjustColumnWidths')">
+            <xsl:copy-of select="stbl:adjustColumnWidths($colgroup)"/>
+          </xsl:when>
+          <xsl:when test="function-available('xtbl:adjustColumnWidths')">
+            <xsl:copy-of select="xtbl:adjustColumnWidths($colgroup)"/>
+          </xsl:when>
+          <xsl:otherwise>
+            <xsl:message terminate="yes">
+              <xsl:text>No adjustColumnWidths function available.</xsl:text>
+            </xsl:message>
+          </xsl:otherwise>
+        </xsl:choose>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:copy-of select="$colgroup"/>
+      </xsl:otherwise>
+    </xsl:choose>
+
+    <xsl:apply-templates select="thead"/>
+    <xsl:apply-templates select="tbody"/>
+    <xsl:apply-templates select="tfoot"/>
+
+    <xsl:if test=".//footnote">
+      <tbody class="footnotes">
+        <tr>
+          <td colspan="{@cols}">
+            <xsl:apply-templates select=".//footnote" 
+                                 mode="table.footnote.mode"/>
+          </td>
+        </tr>
+      </tbody>
+    </xsl:if>
+  </table>
 </xsl:template>
 
-<xsl:template match="text()" mode="hhk"/>
+<!-- output formal object titles enclosed in <h3> tags -->
+<xsl:template name="formal.object.heading">
+  <h3 class="formalhead">
+    <xsl:call-template name="anchor"/>
+    <xsl:apply-templates select="." mode="object.title.markup">
+      <xsl:with-param name="allow-anchors" select="1"/>
+    </xsl:apply-templates>
+  </h3>
+</xsl:template>
 
 </xsl:stylesheet>
+
