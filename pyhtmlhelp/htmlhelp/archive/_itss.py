"""Microsoft Infotech Storage System library interfaces."""

# NOTE: This file was primarily automaticaly generated by comtypes
# and then hand-edit to make it useable.

# See also:
# - http://bonedaddy.net/pabs3/files/istorage.zip 
# - http://source.winehq.org/source/include/wine/itss.idl
# - http://www.codeproject.com/winhelp/htmlhelp.asp


from ctypes import *
from ctypes.wintypes import *

from comtypes import GUID
from comtypes import IUnknown
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes import GUID

CoTaskMemFree = oledll.ole32.CoTaskMemFree


WSTRING = c_wchar_p

STGTY_STORAGE	= 1
STGTY_STREAM	= 2
STGTY_LOCKBYTES	= 3
STGTY_PROPERTY	= 4

STGM_READ 	= 0x00000000L
STGM_WRITE 	= 0x00000001L
STGM_READWRITE 	= 0x00000002L
STGM_SHARE_DENY_NONE 	= 0x00000040L
STGM_SHARE_DENY_READ 	= 0x00000030L
STGM_SHARE_DENY_WRITE 	= 0x00000020L
STGM_SHARE_EXCLUSIVE 	= 0x00000010L
STGM_PRIORITY 	= 0x00040000L
STGM_CREATE 	= 0x00001000L
STGM_CONVERT 	= 0x00020000L
STGM_FAILIFTHERE 	= 0x00000000L
STGM_DIRECT 	= 0x00000000L
STGM_TRANSACTED 	= 0x00010000L
STGM_NOSCRATCH 	= 0x00100000L
STGM_NOSNAPSHOT 	= 0x00200000L
STGM_SIMPLE 	= 0x08000000L
STGM_DIRECT_SWMR 	= 0x00400000L
STGM_DELETEONRELEASE 	= 0x04000000L

STG_E_INVALIDFUNCTION            = 0x80030001L
STG_E_FILENOTFOUND               = 0x80030002L
STG_E_PATHNOTFOUND               = 0x80030003L
STG_E_TOOMANYOPENFILES           = 0x80030004L
STG_E_ACCESSDENIED               = 0x80030005L
STG_E_INVALIDHANDLE              = 0x80030006L
STG_E_INSUFFICIENTMEMORY         = 0x80030008L
STG_E_INVALIDPOINTER             = 0x80030009L
STG_E_NOMOREFILES                = 0x80030012L
STG_E_DISKISWRITEPROTECTED       = 0x80030013L
STG_E_SEEKERROR                  = 0x80030019L
STG_E_WRITEFAULT                 = 0x8003001DL
STG_E_READFAULT                  = 0x8003001EL
STG_E_SHAREVIOLATION             = 0x80030020L
STG_E_LOCKVIOLATION              = 0x80030021L
STG_E_FILEALREADYEXISTS          = 0x80030050L
STG_E_INVALIDPARAMETER           = 0x80030057L
STG_E_MEDIUMFULL                 = 0x80030070L
STG_E_PROPSETMISMATCHED          = 0x800300F0L
STG_E_ABNORMALAPIEXIT            = 0x800300FAL
STG_E_INVALIDHEADER              = 0x800300FBL
STG_E_INVALIDNAME                = 0x800300FCL
STG_E_UNKNOWN                    = 0x800300FDL
STG_E_UNIMPLEMENTEDFUNCTION      = 0x800300FEL
STG_E_INVALIDFLAG                = 0x800300FFL
STG_E_INUSE                      = 0x80030100L
STG_E_NOTCURRENT                 = 0x80030101L
STG_E_REVERTED                   = 0x80030102L
STG_E_CANTSAVE                   = 0x80030103L
STG_E_OLDFORMAT                  = 0x80030104L
STG_E_OLDDLL                     = 0x80030105L
STG_E_SHAREREQUIRED              = 0x80030106L
STG_E_NOTFILEBASEDSTORAGE        = 0x80030107L
STG_E_EXTANTMARSHALLINGS         = 0x80030108L
STG_E_DOCFILECORRUPT             = 0x80030109L
STG_E_BADBASEADDRESS             = 0x80030110L
STG_E_DOCFILETOOLARGE            = 0x80030111L
STG_E_NOTSIMPLEFORMAT            = 0x80030112L
STG_E_INCOMPLETE                 = 0x80030201L
STG_E_TERMINATED                 = 0x80030202L

class tagSTATSTG(Structure):
    pass
tagSTATSTG._fields_ = [
    ('pwcsName', WSTRING),
    ('type', DWORD),
    ('cbSize', ULARGE_INTEGER),
    ('mtime', FILETIME),
    ('ctime', FILETIME),
    ('atime', FILETIME),
    ('grfMode', DWORD),
    ('grfLocksSupported', DWORD),
    ('clsid', GUID),
    ('grfStateBits', DWORD),
    ('reserved', DWORD),
]
assert sizeof(tagSTATSTG) == 72, sizeof(tagSTATSTG)
assert alignment(tagSTATSTG) == 8, alignment(tagSTATSTG)

class _ITS_Control_Data(Structure):
    pass
_ITS_Control_Data._fields_ = [
    ('cdwControlData', c_uint),
    ('adwControlData', c_uint * 1),
]
assert sizeof(_ITS_Control_Data) == 8, sizeof(_ITS_Control_Data)
assert alignment(_ITS_Control_Data) == 4, alignment(_ITS_Control_Data)

class ISequentialStream(IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{0C733A30-2A1C-11CE-ADE5-00AA0044773D}')
    _idlflags_ = []
ISequentialStream._methods_ = [
    COMMETHOD([], HRESULT, 'Read',
              #( ['out'], c_void_p, 'pv' ),
              ( ['in'], c_void_p, 'pv' ),
              ( ['in'], DWORD, 'cb' ),
              ( ['out'], POINTER(DWORD), 'pcbRead' )),
    COMMETHOD([], HRESULT, 'Write',
              ( ['in'], c_void_p, 'pv' ),
              ( ['in'], DWORD, 'cb' ),
              ( ['out'], POINTER(DWORD), 'pcbWritten' )),
]

class IStream(ISequentialStream):
    _case_insensitive_ = True
    _iid_ = GUID('{0000000C-0000-0000-C000-000000000046}')
    _idlflags_ = []
IStream._methods_ = [
    COMMETHOD([], HRESULT, 'RemoteSeek',
              ( ['in'], LARGE_INTEGER, 'dlibMove' ),
              ( ['in'], c_ulong, 'dwOrigin' ),
              ( ['out'], POINTER(ULARGE_INTEGER), 'plibNewPosition' )),
    COMMETHOD([], HRESULT, 'SetSize',
              ( ['in'], ULARGE_INTEGER, 'libNewSize' )),
    COMMETHOD([], HRESULT, 'RemoteCopyTo',
              ( ['in'], POINTER(IStream), 'pstm' ),
              ( ['in'], ULARGE_INTEGER, 'cb' ),
              ( ['out'], POINTER(ULARGE_INTEGER), 'pcbRead' ),
              ( ['out'], POINTER(ULARGE_INTEGER), 'pcbWritten' )),
    COMMETHOD([], HRESULT, 'Commit',
              ( ['in'], c_ulong, 'grfCommitFlags' )),
    COMMETHOD([], HRESULT, 'Revert'),
    COMMETHOD([], HRESULT, 'LockRegion',
              ( ['in'], ULARGE_INTEGER, 'libOffset' ),
              ( ['in'], ULARGE_INTEGER, 'cb' ),
              ( ['in'], c_ulong, 'dwLockType' )),
    COMMETHOD([], HRESULT, 'UnlockRegion',
              ( ['in'], ULARGE_INTEGER, 'libOffset' ),
              ( ['in'], ULARGE_INTEGER, 'cb' ),
              ( ['in'], c_ulong, 'dwLockType' )),
    COMMETHOD([], HRESULT, 'Stat',
              ( ['out'], POINTER(tagSTATSTG), 'pstatstg' ),
              ( ['in'], c_ulong, 'grfStatFlag' )),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IStream)), 'ppstm' )),
]

# values for enumeration 'ECompactionLev'
COMPACT_DATA = 0
COMPACT_DATA_AND_PATH = 1
ECompactionLev = c_int # enum

class ILockBytes(IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{0000000A-0000-0000-C000-000000000046}')
    _idlflags_ = []
ILockBytes._methods_ = [
    COMMETHOD([], HRESULT, 'RemoteReadAt',
              ( ['in'], ULARGE_INTEGER, 'ulOffset' ),
              ( ['out'], POINTER(c_ubyte), 'pv' ),
              ( ['in'], c_ulong, 'cb' ),
              ( ['out'], POINTER(c_ulong), 'pcbRead' )),
    COMMETHOD([], HRESULT, 'RemoteWriteAt',
              ( ['in'], ULARGE_INTEGER, 'ulOffset' ),
              ( ['in'], POINTER(c_ubyte), 'pv' ),
              ( ['in'], c_ulong, 'cb' ),
              ( ['out'], POINTER(c_ulong), 'pcbWritten' )),
    COMMETHOD([], HRESULT, 'Flush'),
    COMMETHOD([], HRESULT, 'SetSize',
              ( ['in'], ULARGE_INTEGER, 'cb' )),
    COMMETHOD([], HRESULT, 'LockRegion',
              ( ['in'], ULARGE_INTEGER, 'libOffset' ),
              ( ['in'], ULARGE_INTEGER, 'cb' ),
              ( ['in'], c_ulong, 'dwLockType' )),
    COMMETHOD([], HRESULT, 'UnlockRegion',
              ( ['in'], ULARGE_INTEGER, 'libOffset' ),
              ( ['in'], ULARGE_INTEGER, 'cb' ),
              ( ['in'], c_ulong, 'dwLockType' )),
    COMMETHOD([], HRESULT, 'Stat',
              ( ['out'], POINTER(tagSTATSTG), 'pstatstg' ),
              ( ['in'], c_ulong, 'grfStatFlag' )),
]

class tagRemSNB(Structure):
    pass
tagRemSNB._fields_ = [
    ('ulCntStr', c_ulong),
    ('ulCntChar', c_ulong),
    ('rgString', POINTER(c_ushort)),
]
assert sizeof(tagRemSNB) == 12, sizeof(tagRemSNB)
assert alignment(tagRemSNB) == 4, alignment(tagRemSNB)
wireSNB = POINTER(tagRemSNB)


class IEnumSTATSTG(IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{0000000D-0000-0000-C000-000000000046}')
    _idlflags_ = []
IEnumSTATSTG._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_ulong, 'celt' ),
              ( ['out'], POINTER(tagSTATSTG), 'rgelt' ),
              ( ['out'], POINTER(c_ulong), 'pceltFetched' )),
#    COMMETHOD([], HRESULT, 'RemoteNext',
#              ( ['in'], c_ulong, 'celt' ),
#              ( ['out'], POINTER(tagSTATSTG), 'rgelt' ),
#              ( ['out'], POINTER(c_ulong), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_ulong, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumSTATSTG)), 'ppenum' )),
]

class IStorage(IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{0000000B-0000-0000-C000-000000000046}')
    _idlflags_ = []
IStorage._methods_ = [
    COMMETHOD([], HRESULT, 'CreateStream',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], c_ulong, 'reserved1' ),
              ( ['in'], c_ulong, 'reserved2' ),
              ( ['out'], POINTER(POINTER(IStream)), 'ppstm' )),
    COMMETHOD([], HRESULT, 'OpenStream',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], c_void_p, 'reserved1' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], c_ulong, 'reserved2' ),
              ( ['out'], POINTER(POINTER(IStream)), 'ppstm' )),
#    COMMETHOD([], HRESULT, 'RemoteOpenStream',
#              ( ['in'], WSTRING, 'pwcsName' ),
#              ( ['in'], c_ulong, 'cbReserved1' ),
#              ( ['in'], POINTER(c_ubyte), 'reserved1' ),
#              ( ['in'], c_ulong, 'grfMode' ),
#              ( ['in'], c_ulong, 'reserved2' ),
#              ( ['out'], POINTER(POINTER(IStream)), 'ppstm' )),
    COMMETHOD([], HRESULT, 'CreateStorage',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], c_ulong, 'reserved1' ),
              ( ['in'], c_ulong, 'reserved2' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstg' )),
    COMMETHOD([], HRESULT, 'OpenStorage',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], POINTER(IStorage), 'pstgPriority' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], wireSNB, 'snbExclude' ),
              ( ['in'], c_ulong, 'reserved' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstg' )),
    COMMETHOD([], HRESULT, 'CopyTo',
              ( ['in'], c_ulong, 'ciidExclude' ),
              ( ['in'], POINTER(GUID), 'rgiidExclude' ),
              ( ['in'], wireSNB, 'snbExclude' ),
              ( ['in'], POINTER(IStorage), 'pstgDest' )),
    COMMETHOD([], HRESULT, 'MoveElementTo',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], POINTER(IStorage), 'pstgDest' ),
              ( ['in'], WSTRING, 'pwcsNewName' ),
              ( ['in'], c_ulong, 'grfFlags' )),
    COMMETHOD([], HRESULT, 'Commit',
              ( ['in'], c_ulong, 'grfCommitFlags' )),
    COMMETHOD([], HRESULT, 'Revert'),
    COMMETHOD([], HRESULT, 'EnumElements',
              ( ['in'], c_ulong, 'reserved1' ),
              ( ['in'], c_void_p, 'reserved2' ),
              ( ['in'], c_ulong, 'reserved3' ),
              ( ['out'], POINTER(POINTER(IEnumSTATSTG)), 'ppenum' )),
#    COMMETHOD([], HRESULT, 'RemoteEnumElements',
#              ( ['in'], c_ulong, 'reserved1' ),
#              ( ['in'], c_ulong, 'cbReserved2' ),
#              ( ['in'], POINTER(c_ubyte), 'reserved2' ),
#              ( ['in'], c_ulong, 'reserved3' ),
#              ( ['out'], POINTER(POINTER(IEnumSTATSTG)), 'ppenum' )),
    COMMETHOD([], HRESULT, 'DestroyElement',
              ( ['in'], WSTRING, 'pwcsName' )),
    COMMETHOD([], HRESULT, 'RenameElement',
              ( ['in'], WSTRING, 'pwcsOldName' ),
              ( ['in'], WSTRING, 'pwcsNewName' )),
    COMMETHOD([], HRESULT, 'SetElementTimes',
              ( ['in'], WSTRING, 'pwcsName' ),
              ( ['in'], POINTER(FILETIME), 'pctime' ),
              ( ['in'], POINTER(FILETIME), 'patime' ),
              ( ['in'], POINTER(FILETIME), 'pmtime' )),
    COMMETHOD([], HRESULT, 'SetClass',
              ( ['in'], POINTER(GUID), 'clsid' )),
    COMMETHOD([], HRESULT, 'SetStateBits',
              ( ['in'], c_ulong, 'grfStateBits' ),
              ( ['in'], c_ulong, 'grfMask' )),
    COMMETHOD([], HRESULT, 'Stat',
              ( ['out'], POINTER(tagSTATSTG), 'pstatstg' ),
              ( ['in'], c_ulong, 'grfStatFlag' )),
]

class IITStorage(IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{88CC31DE-27AB-11D0-9DF9-00A0C922E6EC}')
    _idlflags_ = []
IITStorage._methods_ = [
    COMMETHOD([], HRESULT, 'StgCreateDocfile',
              ( ['in'], POINTER(c_ushort), 'pwcsName' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], c_ulong, 'reserved' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstgOpen' )),
    COMMETHOD([], HRESULT, 'StgCreateDocfileOnILockBytes',
              ( ['in'], POINTER(ILockBytes), 'plkbyt' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], c_ulong, 'reserved' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstgOpen' )),
    COMMETHOD([], HRESULT, 'StgIsStorageFile',
              ( ['in'], POINTER(c_ushort), 'pwcsName' )),
    COMMETHOD([], HRESULT, 'StgIsStorageILockBytes',
              ( ['in'], POINTER(ILockBytes), 'plkbyt' )),
    COMMETHOD([], HRESULT, 'StgOpenStorage',
              #( ['in'], POINTER(c_ushort), 'pwcsName' ),
              ( ['in'], POINTER(c_wchar), 'pwcsName' ),
              ( ['in'], POINTER(IStorage), 'pstgPriority' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], wireSNB, 'snbExclude' ),
              ( ['in'], c_ulong, 'reserved' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstgOpen' )),
    COMMETHOD([], HRESULT, 'StgOpenStorageOnILockBytes',
              ( ['in'], POINTER(ILockBytes), 'plkbyt' ),
              ( ['in'], POINTER(IStorage), 'pstgPriority' ),
              ( ['in'], c_ulong, 'grfMode' ),
              ( ['in'], wireSNB, 'snbExclude' ),
              ( ['in'], c_ulong, 'reserved' ),
              ( ['out'], POINTER(POINTER(IStorage)), 'ppstgOpen' )),
    COMMETHOD([], HRESULT, 'StgSetTimes',
              ( ['in'], POINTER(c_ushort), 'lpszName' ),
              ( ['in'], POINTER(FILETIME), 'pctime' ),
              ( ['in'], POINTER(FILETIME), 'patime' ),
              ( ['in'], POINTER(FILETIME), 'pmtime' )),
    COMMETHOD([], HRESULT, 'SetControlData',
              ( ['in'], POINTER(_ITS_Control_Data), 'pControlData' )),
    COMMETHOD([], HRESULT, 'DefaultControlData',
              ( ['out'], POINTER(POINTER(_ITS_Control_Data)), 'ppControlData' )),
    COMMETHOD([], HRESULT, 'Compact',
              ( ['in'], POINTER(c_ushort), 'pwcsName' ),
              ( ['in'], ECompactionLev, 'iLev' )),
]

CLSID_ITStorage = GUID('{5D02926A-212E-11D0-9DF9-00A0C922E6EC}')
IID_IITStorage  = GUID('{88CC31DE-27AB-11D0-9DF9-00A0C922E6EC}')
